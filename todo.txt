- db : load at startup, export to XML files, import from XML files
  H2: "jdbc:h2:/data/test;AUTO_SERVER=TRUE"
  	;USER=sa;PASSWORD=123
	;IFEXISTS=TRUE ??
	;MODE=Oracle
- table:
  - hosts: hostid, hostkey, adminrole
  - rules: idrule, hostids, recvpath, sendpath, archivepath, workpath, pretasks, posttasks, errortasks
  - runner: specialid, globalstep, step, rank, stepstatus, retrievemode, filename, ismoved, idrule
ajouter a runner info de request (blocksize, fileInformation, origfilename, mode)
  - configuration: readgloballimit, writegloballimit, readsessionlimit, writesessionlimit, delaylimit, hostid
ajouter a tous un champ: updatedinfo qui true => relecture puis set false
=> runner: getAll
=> runner uniquement au démarrage, rules et hosts ne seront plus dans hashtablemais accéder
directement depuis table (éviter de changer de règles ou d'identification pendant un transfert)
crée une copie pour chaque usage (newRule, newHost, ...)
=> en cas de shutdown => svg des runner en cours
=> permet de mettre à jour la conf dynamiquement
Conf générale : fichier xml qui doit être rechargé si modif (arrêt puis relance)
Voir si des paramètres pourraient être dynamiques dans table (si oui, une procédure de lecteur à
intervalle régulier doit exister)
Le fichier de conf pourrait être lui aussi transmis et rechargé (arrêt, relance)
- les clients locaux soumettent des ordres via la table runner (et dans certains cas hosts et rule)
- si des stats sont nécessaires: runner mis à jour par interval (tous les 10 packets par ex)
- Clients Locaux:
	- stat: lecture seule
	- soumission de job: écriture runner (=> lecteur asynchrone server)
	- administration: changement paramètres (hosts, rule, runner, configuration)
	- shutdown (sans message)
doit permettre de relancer un job, de l'arreter, de l'annuler, de programmer un job (exemple
configuration à recharger ou à transmettre)
- Version light de OpenR66: dès qu'un transfert est OK, vidage de la table runner

PRIMARY KEY RUNNER : specialId+requested (puisque c'est lui qui fixe)
Changer objet pour Objet+Database

Voire à charger les données depuis ou vers la base...